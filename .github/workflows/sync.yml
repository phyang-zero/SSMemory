name: Sync posts

on:
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'    # 每天 UTC 1 点运行

permissions:
  contents: write         # 允许推送修改

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出 B 仓库
      - name: Checkout B repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TOKEN }}

      # 2. 克隆 A 仓库 (_posts)，完整历史以获取真实提交时间
      - name: Clone A repository (_posts)
        run: |
          git clone https://x-access-token:${{ secrets.TOKEN }}@github.com/SSMemory/ssmemory.github.io.git repo-a

      # 3. 用每个文件的最后提交时间修正 mtime
      - name: Normalize timestamps to commit time
        run: |
          cd repo-a
          find _posts -type f | while read file; do
            # 获取该文件最后一次提交的 UNIX 时间戳
            ts=$(git log -1 --format="%at" -- "$file")
            # 如果能拿到时间戳，就设置文件 mtime
            if [ -n "$ts" ]; then
              touch -d "@$ts" "$file"
            fi
          done
          cd ..

      # 4. 同步：新增和更新，保留 B 的独有或更新品
      - name: Sync updated and new posts
        run: |
          rsync -a --update repo-a/_posts/ _posts/
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add _posts
          git commit -m "同步 _posts：仅新增 & 更新内容" || echo "无变更，无需提交"
          git push
